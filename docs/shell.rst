シェルの基礎
============

定義
----

基本用語
~~~~~~~~

-  POSIX:
   UNIXを始めとするオペレーティングシステムに共通のAPIを定めた標準規格．
-  標準入力 (stdin): 通常はキーボードを指す
-  標準出力 (stdout): 通常はディスプレイを指す
-  標準エラー出力 (stderr): 通常はディスプレイを指す
-  終了ステータス:
   0から255までの整数値．0はコマンドの実行が成功したことを，それ以外は失敗したことを表す．

コマンドラインの規則
~~~~~~~~~~~~~~~~~~~~

.. code::

   $ command arg1 arg2 ...

-  各引数は1個以上の空白文字で区切られていなければならない．
-  ``-``\ から始まるものはオプションとして扱う．
-  ファイルを引数として受け付ける場合，\ ``-``\ を引数に指定すると，標準入力を入力とする．
-  引数に\ ``--``\ を指定することで，後続の引数はオプションとして解析されない．これはハイフンから始まるファイル名が存在するときなどに便利である．
-  GNU版のコマンドはロングオプションとして\ ``--``\ から始まる文字列を受け付ける．
-  POSIXに規定されていないコマンドは必ずしも上記にしたがうとは限らない．

基本コマンド
------------

本節ではよく使われる基本的なコマンドを紹介する．なお，コマンドの実装はGNU版（Linux）とBSD版（macOS）が有名だが，それぞれに共通のオプションだけを紹介する．中にはPOSIXに準拠していないものもあるため，使用するときは注意する必要がある．

凡例
    ``[string]``
        省略可能な文字列．
    ``[string...]``
        引数として文字列を0個以上を受け付ける．
    ``[-abc]``
        オプションとして\ ``-a``\ ，\ ``-b``\ を受け付ける．
    ``[-A|-B]``
        オプションとして\ ``-A``\ ，\ ``-B``\ を受け付けるが，それぞれは排反であり，どちらか一方のみが指定できる．

参考サイト
    - `<https://pubs.opengroup.org/onlinepubs/9699919799/idx/utilities.html>`_
    - `<https://ss64.com/osx/>`_
    - `<http://man7.org/linux/man-pages/dir_section_1.html>`_

``echo`` - write arguments to standard output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

使い方
^^^^^^

.. code::

    echo [-neE] [string]...

説明
^^^^

引数を標準出力に出力し，改行するコマンド．引数が無ければ，改行だけが出力される．

オプション
^^^^^^^^^^

``echo`` は ``--`` を受け付けない．

POSIX
'''''

存在しない．

非POSIX
'''''''

``-n``
    改行を抑制する．
``-e``
    バックスラッシュによるエスケープシーケンスを有効にする．
``-E``
    バックスラッシュによるエスケープシーケンスを無効にする．規定の動作である．

オペランド
^^^^^^^^^^

*string*
    標準出力に出力される文字列．

    ``-e`` によって有効になるエスケープシーケンスは以下の通り．一部のエスケープシーケンスは端末によっては効果がなかったり，異なる動作をすることもある．

    ``\\``
        バックスラッシュ(``\``)1文字を出力する．
    ``\a``
        アラート (BEL) ``0x07``．
    ``\b``
        バックスペース (BS) ``0x08``．カーソル1つ左に移動する．
    ``\c``
        このエスケープシーケンス以降の文字を出力せずにコマンドを終了する．最後の改行も出力されない．
    ``\f``
        フォームフィード (FF) ``0x0C``．カーソルを1つ下に移動する．
    ``\n``
        改行 (LF) ``0x0A``．カーソルを次の行頭に移動する．
    ``\r``
        復帰 (CR) ``0x0D``．カーソルを行頭に戻す．
    ``\t``
        水平タブ (HT) ``0x09``．カーソルを移動後の位置が8の倍数なるように右に移動する．
    ``\v``
        垂直タブ (VT) ``0x0B``．カーソルを1つ下に移動する．
    ``\0NNN``
        8進数のアスキーコードを持つ文字を出力する． ``N`` は0個から3個の8進数．

終了ステータス
^^^^^^^^^^^^^^

0
    成功
>0
    エラー

``cat`` - concatenate and print files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

使い方
^^^^^^

::

   cat [-ubnsvet] [file...]

説明
^^^^

ファイルを読み込み，内容を標準出力に出力する．

オプション
^^^^^^^^^^

POSIX
'''''

``-u``
    出力をバッファリング（一時的にメモリにためる）をしない．GNU版はこのオプションを無視する．

非POSIX
'''''''

``-b``
    空行以外に行番号を振る．
``-n``
    行番号を振る．
``-s``
    複数行の空行を1行で出力する．
``-v``
    ASCIIにおける，非印刷文字を表示する．印刷文字とは文字コードで  ``0x20`` から ``0x7E`` の間の文字のこと．具体的には制御コードと8bit目が1の文字である．
``-e``
    非印刷文字を表示するのに加えて，改行文字を ``$`` で表示する．
``-t``
    非印刷文字を表示するのに加えて，タブ文字を ``^I`` で表示する．

オペランド
^^^^^^^^^^

*file*
    入力ファイルのパス．ファイル名が指定されなかったとき，標準入力が使われる．*file* に ``-`` が指定されたとき，標準入力を読む．

標準入力
^^^^^^^^

オペランドがない，または ``-`` が指定されたときにのみ使用される．

入力ファイル
^^^^^^^^^^^^

あらゆるファイル形式を受け付ける．
